name: Release soul binary

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  releases-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Build the binary
        run: |
          cd tools/soul
          mkdir -p ../build-artifacts-${{ matrix.goos }}-${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ../build-artifacts-${{ matrix.goos }}-${{ matrix.goarch }}/soul

      - name: Check if release exists
        id: check_release
        run: |
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}"
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" $RELEASE_URL)
          if [ $RESPONSE -eq 200 ]; then
            echo "Release already exists"
            echo "release_exists=true" >> $GITHUB_ENV
          elif [ $RESPONSE -eq 404 ]; then
            echo "Release does not exist"
            echo "release_exists=false" >> $GITHUB_ENV
          else
            echo "Unexpected response: $RESPONSE"
            cat response.json
            exit 1
          fi

      - name: Create release if it does not exist
        if: env.release_exists == 'false'
        id: create_release
        run: |
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases -d '{"tag_name":"${{ github.ref_name }}","name":"Release ${{ github.ref_name }}"}')
          if [ $RESPONSE -eq 201 ]; then
            echo "Release created"
          else
            echo "Failed to create release"
            cat response.json
            exit 1
          fi

      - name: Create tarball
        run: |
          cd tools/soul/build-artifacts-${{ matrix.goos }}-${{ matrix.goarch }}
          tar cvfz ../../soul-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz README.md soul

      - name: Upload release assets
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "tools/soul"
          binary_name: "soul"
          extra_files: tools/soul/README.md
          release_tag: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"
          release_repo: ${{ github.repository }}
          compress_assets: true
          overwrite: false
          retry: 3
