// Code generated by goclt. DO NOT EDIT.
package types

type User struct {
	ID               string `json:"id"`
	Email            string `json:"email" validate:"required,email"`
	Name             string `json:"name,omitempty"`
	Role             string `json:"role,omitempty"`
	ApiKey           string `json:"apiKey,omitempty"`
	DefaultSubdomain string `json:"defaultSubdomain"`
	AccountStatus    string `json:"accountStatus,omitempty"`
	CreatedAt        string `json:"createdAt"`
	UpdatedAt        string `json:"updatedAt"`
}

type LoginRequest struct {
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required"`
}

type RegisterRequest struct {
	Name     string `json:"name" validate:"required"`
	Email    string `json:"email" validate:"required,email"`
	Password string `json:"password" validate:"required"`
}

type LoginCodeRequest struct {
	Email string `json:"email" validate:"required,email"`
}

type VerifyCodeRequest struct {
	Email string `json:"email" validate:"required,email"`
	Code  string `json:"code" validate:"required"`
}

type BlogPost struct {
	ID        string `json:"id"`
	Title     string `json:"title"`
	Slug      string `json:"slug"`
	Content   string `json:"content"`
	Status    string `json:"status"`
	AuthorID  string `json:"authorId"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

type Tag struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	Slug string `json:"slug"`
}

type Category struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	Slug string `json:"slug"`
}

type Team struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	OwnerID string `json:"ownerId"`
}

type Membership struct {
	UserID string `json:"userId"`
	TeamID string `json:"teamId"`
	Role   string `json:"role"`
}

type Invitation struct {
	Email     string `json:"email"`
	TeamID    string `json:"teamId"`
	Role      string `json:"role"`
	Token     string `json:"token"`
	Status    string `json:"status"`
	ExpiresAt string `json:"expiresAt"`
}

type Plan struct {
	ID           string                 `json:"id"`
	Name         string                 `json:"name"`
	PriceMonthly float64                `json:"priceMonthly"`
	PriceYearly  float64                `json:"priceYearly,omitempty"`
	Features     map[string]interface{} `json:"features"`
}

type Subscription struct {
	ID                 string `json:"id"`
	UserID             string `json:"userId"`
	PlanID             string `json:"planId"`
	Status             string `json:"status"`
	CurrentPeriodStart string `json:"currentPeriodStart"`
	CurrentPeriodEnd   string `json:"currentPeriodEnd"`
}

type Notification struct {
	ID        string `json:"id"`
	UserID    string `json:"userId"`
	Title     string `json:"title"`
	Body      string `json:"body"`
	Type      string `json:"type"`
	IsRead    bool   `json:"isRead"`
	CreatedAt string `json:"createdAt"`
}

type Response struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type EmailPreferences struct {
	Marketing bool `json:"marketing"`
	Updates   bool `json:"updates"`
	Security  bool `json:"security"`
}

type SecuritySettings struct {
	TwoFactorEnabled   bool   `json:"twoFactorEnabled"`
	LastPasswordChange string `json:"lastPasswordChange"`
}

type APIUsageStats struct {
	RequestsToday      int `json:"requestsToday"`
	RequestsThisMonth  int `json:"requestsThisMonth"`
	RateLimitRemaining int `json:"rateLimitRemaining"`
}

type DashboardMetrics struct {
	TotalUsers          int `json:"totalUsers"`
	ActiveUsers         int `json:"activeUsers"`
	TotalTeams          int `json:"totalTeams"`
	ActiveSubscriptions int `json:"activeSubscriptions"`
}

type AddonRequest struct {
	AddonID string `path:"addonId"`
}

type AddonResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	AddonID string `json:"addonId"`
}

type CheckoutSessionRequest struct {
	PlanID   string `json:"planId" validate:"required"`
	IsYearly bool   `json:"isYearly"`
}

type CheckoutSessionResponse struct {
	Success   bool   `json:"success"`
	Message   string `json:"message"`
	SessionID string `json:"sessionId"`
	URL       string `json:"url"`
}

type PortalSessionResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	URL     string `json:"url"`
}

type InvoiceResponse struct {
	Success  bool   `json:"success"`
	Message  string `json:"message"`
	Invoices []struct {
		ID        string  `json:"id"`
		Amount    float64 `json:"amount"`
		Currency  string  `json:"currency"`
		Status    string  `json:"status"`
		CreatedAt string  `json:"createdAt"`
	} `json:"invoices"`
}

type TeamRequest struct {
	TeamID string `path:"teamId"`
}

type TeamMemberRequest struct {
	TeamID   string `path:"teamId"`
	MemberID string `path:"memberId"`
}

type TeamInvitationRequest struct {
	TeamID       string `path:"teamId"`
	InvitationID string `path:"invitationId"`
}

type InvitationTokenRequest struct {
	Token string `path:"token"`
}

type NotificationRequest struct {
	NotificationID string `path:"notificationId"`
}

type AdminUserRequest struct {
	UserID string `path:"userId"`
}

type TeamResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	Team    Team   `json:"team,omitempty"`
}

type TeamMembersResponse struct {
	Success bool         `json:"success"`
	Message string       `json:"message"`
	Members []Membership `json:"members"`
}

type TeamMemberResponse struct {
	Success bool       `json:"success"`
	Message string     `json:"message"`
	Member  Membership `json:"member,omitempty"`
}

type TeamInvitationsResponse struct {
	Success     bool         `json:"success"`
	Message     string       `json:"message"`
	Invitations []Invitation `json:"invitations"`
}

type InvitationResponse struct {
	Success    bool       `json:"success"`
	Message    string     `json:"message"`
	Invitation Invitation `json:"invitation,omitempty"`
}

type NotificationResponse struct {
	Success      bool         `json:"success"`
	Message      string       `json:"message"`
	Notification Notification `json:"notification,omitempty"`
}

type NotificationsResponse struct {
	Success       bool           `json:"success"`
	Message       string         `json:"message"`
	Notifications []Notification `json:"notifications"`
}

type AdminUserResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	User    User   `json:"user,omitempty"`
}

type AdminUserCommunicationsResponse struct {
	Success       bool           `json:"success"`
	Message       string         `json:"message"`
	Notifications []Notification `json:"notifications"`
}

type BlogListRequest struct {
	Page    int    `query:"page" validate:"min=1"`
	PerPage int    `query:"perPage" validate:"min=1,max=100"`
	Sort    string `query:"sort" validate:"oneof=newest oldest"`
}

type BlogPostRequest struct {
	Slug string `path:"slug"`
}

type BlogTagRequest struct {
	TagSlug string `path:"tagSlug"`
	Page    int    `query:"page" validate:"min=1"`
	PerPage int    `query:"perPage" validate:"min=1,max=100"`
}

type BlogCategoryRequest struct {
	CategorySlug string `path:"categorySlug"`
	Page         int    `query:"page" validate:"min=1"`
	PerPage      int    `query:"perPage" validate:"min=1,max=100"`
}
